// <auto-generated />
using System;
using CommandControlServer.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommandControlServer.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250226150731_RemoveBotStatus")]
    partial class RemoveBotStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("BotBotGroup", b =>
                {
                    b.Property<int>("BotGroupsBotGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BotsBotId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BotGroupsBotGroupId", "BotsBotId");

                    b.HasIndex("BotsBotId");

                    b.ToTable("BotBotGroup");
                });

            modelBuilder.Entity("CommandControlServer.Api.Models.Bot", b =>
                {
                    b.Property<int>("BotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("LastAction")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("BotId");

                    b.ToTable("Bots", (string)null);
                });

            modelBuilder.Entity("CommandControlServer.Api.Models.BotGroup", b =>
                {
                    b.Property<int>("BotGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BotGroupId");

                    b.ToTable("BotGroups", (string)null);
                });

            modelBuilder.Entity("CommandControlServer.Api.Models.BotResponse", b =>
                {
                    b.Property<int>("BotResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BotId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponseContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponseType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Success")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("BotResponseId");

                    b.HasIndex("BotId");

                    b.ToTable("BotResponses", (string)null);
                });

            modelBuilder.Entity("BotBotGroup", b =>
                {
                    b.HasOne("CommandControlServer.Api.Models.BotGroup", null)
                        .WithMany()
                        .HasForeignKey("BotGroupsBotGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommandControlServer.Api.Models.Bot", null)
                        .WithMany()
                        .HasForeignKey("BotsBotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommandControlServer.Api.Models.BotResponse", b =>
                {
                    b.HasOne("CommandControlServer.Api.Models.Bot", "Bot")
                        .WithMany("Responses")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bot");
                });

            modelBuilder.Entity("CommandControlServer.Api.Models.Bot", b =>
                {
                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
