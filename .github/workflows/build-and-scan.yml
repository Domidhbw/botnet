name: build-and-scan
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}
permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  build_scan_push:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - svc: bot-api
            context: ./bot
            dockerfile: Bot.Api/Dockerfile
            port: "8080"              # nur Info
          - svc: ccs-api
            context: ./ccs
            dockerfile: commandcontrolserver.api/Dockerfile
            port: "8080"
          - svc: ccs-frontend
            context: ./ccs/commandcontrolserver_frontend
            dockerfile: Dockerfile
            port: "80"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image tags
        id: meta
        run: |
            REPO_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
            SHA="${{ github.sha }}"
            IMAGE="ghcr.io/${REPO_LC}:${{ matrix.svc }}-${SHA}"
            echo "image=$IMAGE" >> $GITHUB_OUTPUT

      # Build lokal laden (nicht pushen), damit Trivy scannen kann
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (load locally)
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.image }}
          load: true
          push: false
          provenance: false

      - name: Trivy scan (fail on HIGH/CRITICAL)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ steps.meta.outputs.image }}
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true

      - name: Generate SBOM (CycloneDX)
        run: trivy image --format cyclonedx --output sbom-${{ matrix.svc }}.json ${{ steps.meta.outputs.image }}

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ matrix.svc }}
          path: sbom-${{ matrix.svc }}.json

      - name: Login to GHCR
        if: ${{ success() }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image (only if scans passed)
        if: ${{ success() }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.image }}
          push: true
          provenance: false
